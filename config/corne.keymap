/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        mac_swed_a: mac_swed_a {
            label = "macro_a_and";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(A)>;
        };
        mac_swed_o: mac_swed_o {
            label = "macro_a_and";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(U) &kp O>;
        };
        mac_swed_aa: mac_swed_aa {
            label = "macro_a_and";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(U) &kp O>;
        };
        mac_swed_capa: mac_swed_capa {
            label = "macro_a_and";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LS(RA(A))>;
        };
        mac_swed_capo: mac_swed_capo {
            label = "macro_a_and";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(U) &kp LS(O)>;
        };
        mac_swed_capaa: mac_swed_capao {
            label = "macro_a_and";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp RA(U) &kp LS(A)>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL  |
            //                    | ALT | LCMD | L2 |   | SPC/SHIFT | L1  | L3 |

            bindings = <
  &kp TAB  &kp Q  &kp W          &kp E             &kp R  &kp T        &kp Y  &kp U      &kp I    &kp O     &kp P   &kp BSPC
  &kp ESC  &kp A  &kp S          &kp D             &kp F  &kp G        &kp H  &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
&kp LCTRL  &kp Z  &kp X          &kp C             &kp V  &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LCTRL
                         &kp RIGHT_ALT  &kp LEFT_COMMAND  &mo 2    &hm RSHFT SPACE  &mo 1      &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | RA(BKSP) |
            // | ESC  |  å  |  ö  |  ä  |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |  Å  |  Ö  |  Ä  |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL     &kp AT      &kp HASH        &kp DLLR  &kp PRCNT &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
&trans     &mac_swed_a   &mac_swed_a  &mac_swed_a      &trans    &trans    &kp LEFT   &kp DOWN    &kp UP         &kp RIGHT &kp ENTER  &trans
&kp LSHFT  &mac_swed_capa &mac_swed_capo &mac_swed_capaa  &trans  &trans      &trans    &trans    &trans        &trans     &trans     &trans
                                                    &trans  &trans  &trans      &trans    &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
   &trans    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp FSLH  &kp GRAVE
&kp LSHFT    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                               &trans    &trans     &trans       &trans     &trans         &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &trans
&trans  &trans  &trans  &trans  &trans  &trans             &trans           &trans           &trans           &trans           &trans  &trans
                        &trans  &trans  &trans             &trans           &trans           &trans
            >;
        };
    };
};
